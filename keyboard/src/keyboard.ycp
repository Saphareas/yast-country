/*
 *
 * Module:             keyboard.ycp
 *
 * Author:             Thomas Roelz (tom@suse.de)
 *
 * Submodules:
 *
 *
 * Purpose:	configure keyboard in running system
 *
 * Modify:
 *
 *
 * $Id$
 */

{
    textdomain "country";

    import "Keyboard";
    import "Misc";
    import "Mode";

    import "Wizard";
    import "Popup";
    import "Label";

    // Memorize the current keyboard.
    //
    string keyboard_on_entry = Keyboard::current_kbd;

    // Check if this is a reconfiguration run.
    //
    if ( Mode::reprobe )
    {
	// Reprobe keyboard module to achieve same behaviour as during installation.
	//
	Keyboard::Probe();
	Keyboard::SetConsole( Keyboard::current_kbd );
	Keyboard::SetX11( Keyboard::current_kbd );

	y2milestone("Reprobed keyboard");
    }

    // create the wizard dialog
    //
    Wizard::CreateDialog();

    any result = nil;

    // The keyboard module should be initialized to the current keyboard from
    // sysconfig, XF86Config or probing. Either way this Keyboard will be
    // selected in the list in inst_keyboard.ycp. Now let the user choose a new
    // keyboard layout.
    //
    result = WFM::CallFunction( "inst_keyboard", [ true, true ] );

    if( result == `next )
	{
	// User accepted the the setting.
	//
	if ( keyboard_on_entry != Keyboard::current_kbd )
	    {
	    y2milestone("User selected new keyboard: <%1>", Keyboard::current_kbd );
	    }
	Keyboard::Save( keyboard_on_entry!=Keyboard::current_kbd );
	SCR::Execute( .target.bash, "/usr/sbin/rckbd restart" );
	}
    else	// `cancel or `back
	{
	y2milestone( "User cancelled --> no change" );
	}

    return UI::CloseDialog();
}
